version: '3.8'

services:
  # GraphQL API Service
  graphql-api:
    build: .
    container_name: graphql-crud-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/graphqldb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      - postgres
      - redis
    networks:
      - graphql-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: graphql-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=graphqldb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - graphql-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: graphql-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - graphql-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: graphql-pgadmin
    ports:
      - "8081:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - graphql-network
    restart: unless-stopped

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: graphql-redis-commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - graphql-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  graphql-network:
    driver: bridge